#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        LShiftTapDance: LShiftTapDance {
            compatible = "zmk,behavior-tap-dance";
            label = "LSHIFTTAPDANCE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&sk LEFT_SHIFT>;
        };

        RShiftTapDance: RShiftTapDance {
            compatible = "zmk,behavior-tap-dance";
            label = "RSHIFTTAPDANCE";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_SHIFT>, <&sk RIGHT_SHIFT>;
        };
    };

    macros {
        Lmeh: meh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_SHIFT>;
            label = "MEH";
        };

        Rmeh: Rmeh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_CONTROL &kp RIGHT_ALT &kp RIGHT_SHIFT>;
            label = "RMEH";
        };

        Lhyper: Lhyper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_SHIFT &kp LCMD>;
            label = "LHYPER";
        };

        Rhyper: Rhyper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_CONTROL &kp RIGHT_ALT &kp RIGHT_SHIFT &kp RIGHT_COMMAND>;
            label = "RHYPER";
        };

        QuickNote: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&Lhyper &kp Q>;
            label = "NEW_MACRO";
        };

        PrintScreen: PrintScreen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_4))>;
            label = "PRINTSCREEN";
        };
    };

    combos {
        compatible = "zmk,combos";

        One {
            bindings = <&kp NUMBER_1>;
            key-positions = <1 13>;
        };

        Two {
            bindings = <&kp NUMBER_2>;
            key-positions = <2 14>;
        };

        Three {
            bindings = <&kp NUMBER_3>;
            key-positions = <3 15>;
        };

        Four {
            bindings = <&kp NUMBER_4>;
            key-positions = <4 16>;
        };

        Five {
            bindings = <&kp NUMBER_5>;
            key-positions = <5 17>;
        };

        Six {
            bindings = <&kp NUMBER_6>;
            key-positions = <6 18>;
        };

        Seven {
            bindings = <&kp NUMBER_7>;
            key-positions = <7 19>;
        };

        Eight {
            bindings = <&kp NUMBER_8>;
            key-positions = <8 20>;
        };

        Nine {
            bindings = <&kp NUMBER_9>;
            key-positions = <9 21>;
        };

        Zero {
            bindings = <&kp NUMBER_0>;
            key-positions = <10 22>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp GRAVE  &kp Q                     &kp W               &kp E           &kp R            &kp T                     &kp Y                   &kp U            &kp I            &kp O                &kp P                         &kp MINUS
&kp TAB    &hm LC(LA(LEFT_SHIFT)) A  &hm LEFT_CONTROL S  &hm LEFT_ALT D  &hm LCMD F       &hm LC(LA(LS(LCMD))) G    &hm RC(RA(RS(RCMD))) H  &hm RCMD J       &hm RIGHT_ALT K  &hm RIGHT_CONTROL L  &hm LC(LA(RIGHT_SHIFT)) SEMI  &kp SQT
&mo 2      &kp Z                     &kp X               &kp C           &kp V            &kp B                     &kp N                   &kp M            &kp COMMA        &kp DOT              &kp FSLH                      &mo 1
                                                         &lt 1 ESC       &LShiftTapDance  &kp BACKSPACE             &kp SPACE               &RShiftTapDance  &lt 2 ENTER
            >;
        };

        NAV {
            display-name = "NavNum";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6              &kp N7              &kp N8            &kp N9               &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_ARROW      &kp DOWN_ARROW      &kp UP_ARROW      &kp RIGHT_ARROW      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp RC(LEFT_ARROW)  &kp RC(DOWN_ARROW)  &kp RC(UP_ARROW)  &kp RC(RIGHT_ARROW)  &trans  &trans
                        &trans  &trans  &trans    &trans              &trans              &trans
            >;
        };

        SYM {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT          &kp HASH        &kp DLLR         &kp PRCNT     &kp CARET  &kp AMPS   &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RPAR  &kp PIPE
&trans  &trans    &trans          &kp UP_ARROW    &trans           &kp GRAVE     &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT              &kp BSLH  &trans
&trans  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp TILDE     &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC              &kp PIPE  &trans
                                  &kp LGUI        &trans           &kp DELETE    &kp RET    &trans     &trans
            >;
        };

        SYS {
            display-name = "System";
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6            &kp F7        &kp F8  &kp F9  &kp F10  &kp F11      &kp F12
&trans        &trans        &trans        &trans        &trans        &studio_unlock    &trans        &trans  &trans  &trans   &trans       &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR        &PrintScreen  &trans  &trans  &trans   &bootloader  &trans
                                          &trans        &trans        &trans            &trans        &trans  &trans
            >;
        };

        EXTRA {
            display-name = "extra";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &bootloader  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
